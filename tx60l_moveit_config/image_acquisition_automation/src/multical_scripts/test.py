import numpy as np

# h = np.array([[1,0,0,1],[0,1,0,1],[0,0,1,1]])
# v= np.array([[0,0,0,1]])
# x = np.concatenate((h,v), axis=0)
# print(h.shape,v.shape,x.shape)

rtmatrix = np.array([[ 0.92702744,  0.14381132, -0.34632128, -0.04695151],
       [-0.19739649,  0.9723723 , -0.12460631, -0.04573258],
       [ 0.31883342,  0.18387608,  0.92980366,  1.08939632],
       [ 0.0        ,  0.0        ,  0.0        ,  1.0        ]])

base_cam_matrix = np.array([[ 0.56925397, -0.67664019, -0.46702032, -0.06673461],
       [-0.78533613, -0.27941079, -0.55242807,  0.46211942],
       [ 0.24330452,  0.6812398 , -0.69044569,  1.73848447],
       [ 0.0        ,  0.0       ,  0.0        ,  1.0        ]])

base_gripper_matrix =np.array([[-0.55315672, -0.62470936,  0.5511405 ,  0.2089787 ],
       [-0.45777613, -0.32480523, -0.82761258, -0.32408559],
       [ 0.69603064, -0.71009843, -0.10630884,  0.68314043],
       [ 0.0        ,  0.0        ,  0.0       ,  1.0        ]])

gripper_world_matrix = np.array([[-0.6585636 , -0.48842426,  0.57248208, -0.00625929],
       [-0.05511515,  0.7900108 ,  0.61061056,  0.04745076],
       [-0.75050404,  0.37057345, -0.54719193,  0.0097028 ],
       [ 0.0        ,  0.0        ,  0.0        ,  1.0        ]])

final = (base_cam_matrix) @ (base_gripper_matrix) @ np.linalg.inv(gripper_world_matrix)
final = (base_cam_matrix) @ (base_gripper_matrix) @ np.linalg.inv(gripper_world_matrix)
error = rtmatrix - (final)
pass

# print(out)